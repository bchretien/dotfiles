" vim: set sw=2 ts=2 sts=2 et tw=78 foldmarker={{{,}}} foldlevel=0 foldmethod=marker spell: ft=vim

" Start adding Plugs
silent! if plug#begin('~/.nvim/plugged')

" Edition plugins {{{
  " Quoting/parenthesizing made simple
  Plug 'tpope/vim-surround'

  " A Vim alignment plugin
  Plug 'junegunn/vim-easy-align', { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] }
" }}}

" Development plugins {{{
  " Commenter plugin
  Plug 'scrooloose/nerdcommenter'

  " Display tags in a window, ordered by scope
  Plug 'majutsushi/tagbar', { 'on': 'TagbarToggle' }

  " UltiSnips: engine.
  Plug 'sirver/ultisnips'
  Plug 'honza/vim-snippets'

  " Git wrapper
  Plug 'tpope/vim-fugitive'

  " Perform the replacement in quickfix
  Plug 'thinca/vim-qfreplace', { 'on': 'Qfreplace' }

  " A code-completion engine for Vim
  Plug 'Valloric/YouCompleteMe', { 'do': 'python2 ./install.py --clang-completer --system-libclang' }

  " Enhanced syntax highlighting for C++
  Plug 'octol/vim-cpp-enhanced-highlight'
" }}}

" Miscellaneous plugins {{{
  " fzf for vim
  if executable('fzf')
    Plug 'junegunn/fzf'
    Plug 'junegunn/fzf.vim'
  endif

  " Perform all your Vim insert mode completions with Tab
  Plug 'ervandew/supertab'
" }}}

" Display plugins {{{
  " A light and configurable statusline/tabline for Vim
  Plug 'bchretien/lightline.vim'

  " Fancy start screen
  Plug 'mhinz/vim-startify'

  " Color schemes
  "Plug 'flazz/vim-colorschemes'
  Plug 'w0ng/vim-hybrid'
" }}}

" Load local plugin file (if it exists)
" This provides a way to have user-specific plugins without needing
" to change this file.
if filereadable(expand("~/.nvimrc.plugins.local"))
  source ~/.nvimrc.plugins.local
endif

" Stop adding Plugs
call plug#end()
endif
